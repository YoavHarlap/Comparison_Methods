\documentclass[aspectratio=169]{beamer}
\usepackage{amsmath, amsfonts, amssymb}
\usepackage{graphicx}
\usepackage{subcaption}
\usepackage{booktabs}
\usepackage{hyperref}
\usepackage{pdfpages} % Include PDF pages
\usepackage{mathtools}

% Beamer theme and setup
\usetheme{CambridgeUS}

% Define custom colors
\definecolor{myblue}{RGB}{42, 77, 114}
\definecolor{myorange}{RGB}{100, 40, 0}
\definecolor{mygray}{RGB}{10, 0, 0}

% Set custom color theme
\setbeamercolor{frametitle}{fg=white, bg=myblue}
\setbeamercolor{title}{fg=white, bg=myblue}
\setbeamercolor{block body}{bg=mygray}
\setbeamercolor{section in toc}{fg=mygray}
\setbeamercolor{subsection in toc}{fg=myblue}

% Custom table of contents icons
\setbeamertemplate{section in toc}{\color{myblue}$\blacktriangleright$~\inserttocsection}
\setbeamertemplate{subsection in toc}{\color{myblue}$\circ$~\inserttocsubsection}

% Add a banner
\setbeamertemplate{headline}{
  \leavevmode%
  \hbox{
    \begin{beamercolorbox}[wd=\paperwidth, ht=2.5ex, dp=1ex, center]{frametitle}
      \textbf{\insertsectionhead}
    \end{beamercolorbox}%
  }
}

% Define custom footline with current slide out of total slides
\setbeamertemplate{footline}{
  \leavevmode%
  % Add a black line above the footer
  \hbox{
    \begin{beamercolorbox}[wd=\paperwidth, ht=0.5ex, center]{blackline}
    \end{beamercolorbox}%
  }
  % Add the footer content
  \hbox{
    \begin{beamercolorbox}[wd=\paperwidth, ht=2.5ex, dp=1ex, center]{footline}
      \insertshortauthor \hfill \insertshorttitle \hfill \insertframenumber{} / \inserttotalframenumber
    \end{beamercolorbox}%
  }
}

% Set the colors for the footline and the black line
\setbeamercolor{blackline}{bg=black}
\setbeamercolor{footline}{fg=white, bg=myblue}

% Ensure no white line appears
\setbeamertemplate{background canvas}[default]
\setbeamercolor{background canvas}{bg=white}

\begin{document}

% Insert the PDF cover page
\includepdf[pages=1]{cover.pdf}

\title{Phase Retrieval and Matrix Completion through Projection-Based Algorithms}
\author{Yoav Harlap}
\institute{Under the supervision of Prof. Tamir Bendory}
\date{}

% \begin{frame}
%   \titlepage
% \end{frame}

\begin{frame}{Table of Contents}
  \tableofcontents
\end{frame}

% Chapter: Introduction
\AtBeginSection[]{
    \begin{frame}[plain] % 'plain' removes header and footer
        \centering
        \Huge \insertsection
    \end{frame}
    \addtocounter{framenumber}{-1} % Exclude this frame from numbering
}


\section{Introduction}

\begin{frame}{Overview and Motivation}
  \textbf{Phase Retrieval:} Reconstructing a signal from the magnitude of its Fourier transform where phase information is missing.
  \begin{itemize}
    \item Applications: optics, signal processing, and crystallography.
    \item Challenge: Magnitude defines energy distribution, phase defines spatial structure.
  \end{itemize}
  \textbf{Key Formula:} $F(u, v) = |F(u, v)| e^{i\phi(u, v)}$
\end{frame}

% \begin{frame}{Importance of Phase}
%   \begin{itemize}
%     \item Phase is essential for reconstructing spatial structures.
%     \item Without phase, the image becomes distorted or unrecognizable.
%   \end{itemize}
% \end{frame}

\begin{frame}{Illustration: Missing Phase}
  \textbf{Objective:} Illustrate the impact of missing phase information.
  \begin{figure}[h!]
    \centering
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig1_original_image.png}
        \caption{Original image.}
    \end{subfigure} \hfill
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig1_magnitude_spectrum.png}
        \caption{Fourier magnitude.}
    \end{subfigure} \hfill
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig1_reconstructed_image.png}
        \caption{Reconstruction with random phases.}
    \end{subfigure}
    \caption{Illustration of the importance of phase in Fourier analysis.}
  \end{figure}
\end{frame}



\begin{frame}{Experiment: Phase Replacement}
  \textbf{Objective:} Demonstrate the role of phase.
  \begin{figure}[h!]
    \centering
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig2_original_image.png}
        \caption{Original image.}
    \end{subfigure} \hfill
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig2_phase_replaced_image.png}
        \caption{Reconstruction using different phase.}
    \end{subfigure} \hfill
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig2_second_image.png}
        \caption{Second image (phase source).}
    \end{subfigure}
    \caption{Phase replacement experiment.}
  \end{figure}
\end{frame}

\begin{frame}{Periodic Patterns: Magnitude Dominance}
  \textbf{Objective:} Examine cases where magnitude dominates.
  \begin{figure}[h!]
    \centering
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig3_grid_image.png}
        \caption{Original grid image.}
    \end{subfigure} \hfill
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig3_combined_image.png}
        \caption{Reconstruction (grid magnitude).}
    \end{subfigure} \hfill
    \begin{subfigure}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{intro/fig3_second_image_phase_source.png}
        \caption{Phase source image.}
    \end{subfigure}
    \caption{Grid example: Magnitude dominance.}
  \end{figure}
\end{frame}


\begin{frame}{Mathematical Problem}
  \textbf{Phase Retrieval:}
  \begin{equation}
    |Ax_0| = b,
  \end{equation}
  \begin{itemize}
    \item $A$: sensing matrix (e.g., Fourier transform matrix).
    \item $b$: magnitude measurements.
  \end{itemize}
\end{frame}

\begin{frame}{Set-Based Formulation}
  \textbf{Key Set Definitions:}
  \begin{equation}
    \mathcal{B} = \left\{ y \in \mathbb{C}^m : |y| = b \right\}, \quad \mathcal{A} \text{ encodes additional constraints.}
  \end{equation}
  \textbf{Projection-Based Solution:}
  \begin{itemize}
    \item Find $x \in \mathcal{A} \cap \mathcal{B}$.
    \item Iteratively refine $x$ using projections.
  \end{itemize}
\end{frame}

\begin{frame}{Challenges and Limitations in Phase Retrieval Algorithms}
    \textbf{Key Challenges:}
    \begin{itemize}
        \item \textbf{Practical Challenges:}
        \begin{itemize}
            \item In contrast to random models, real-world problems use Fourier-type matrices.
            \item Non-convexity is not well-behaved; algorithms converge to local minima.
        \end{itemize}
        \item \textbf{Open Issues:}
        \begin{itemize}
            \item Non-uniqueness of solutions.
            \item Noise sensitivity.
            \item High computational complexity.
        \end{itemize}
    \end{itemize}
\end{frame}


\begin{frame}{Research Scope and Objectives}
  \textbf{Objective:} Assess performance of projection-based algorithms across diverse scenarios.
  \begin{enumerate}
    \item \textbf{Random phase retrieval problem:} \newline
          The matrix \( A \) is random, where every element is drawn i.i.d. from a normal distribution, real or complex.
    \item \textbf{Crystallographic phase retrieval problem:} \newline
          Recovering missing phase information from Fourier magnitude samples using a DFT matrix, with sparsity constraints.
    \item \textbf{Matrix completion problem:} \newline
          Reconstruct a matrix with missing elements using the rank \( r \) as a constraint.
  \end{enumerate}
\end{frame}

\begin{frame}{Example: Sudoku as Matrix Completion}
\begin{figure}[h]
  \centering
  \begin{subfigure}[t]{0.3\textwidth}
    \centering
    \includegraphics[width=\textwidth]{figures1/sudoku_1}
    \caption{Original Sudoku puzzle}
    \label{fig:sudokuOriginal}
  \end{subfigure}
  \hspace{0.05\textwidth}
  \begin{subfigure}[t]{0.3\textwidth}
    \centering
    \includegraphics[width=\textwidth]{figures1/sudoku_2}
    \caption{Elements to be reconstructed (in blue)}
    \label{fig:sudokuMissing}
  \end{subfigure}
  \caption[An example of a matrix-completion problem is illustrated in Sudoku.]{An example of a matrix completion problem is the Sudoku game. We are given the initial clues (the elements we know) and need to reconstruct the missing elements (the cells painted in blue).}
  \label{fig:sudokuExample}
\end{figure}
\end{frame}



% Chapter: Projection-Based Methods
\section{Projection on Sets Method}
\begin{frame}{Projection on Sets Method}
    \textbf{Overview:}
    \begin{itemize}
        \item Constraints are represented as projections onto defined spaces.
        \item The goal: Find the intersection \( x_0 \in \mathcal{A} \cap \mathcal{B} \).
        \item Projections ensure the signal resides within spaces satisfying the constraints.
    \end{itemize}

    \textbf{Key Definitions:}
    \begin{itemize}
        \item Projection of \( y \in \mathbb{C}^n \) onto \( \mathcal{A} \): \( P_\mathcal{A}(y) \).
        \item Projection onto \( \mathcal{B} \): \( P_\mathcal{B}(y) \).
        \item Solution condition: \( P_{\mathcal{A}}(y_0) = P_{\mathcal{B}}(y_0) \).
    \end{itemize}

    \textbf{Why Focus on \( y \):}
    \begin{itemize}
        \item For \( x \in \mathbb{C}^n \), let \( y = Ax \in \mathbb{C}^m \).
        \item Projections in terms of \( y \) are computationally less expensive, especially for \( \mathcal{B} \) \cite{li2017relaxed, levin2019note}.
    \end{itemize}
\end{frame}

\begin{frame}{Set Projection Example Illustrated with Sudoku}
    \begin{figure}[ht]
      \centering
      \resizebox{\textwidth}{!}{ % Adjust the width to fit within the slide
        \begin{minipage}{\textwidth}
          \centering
          \begin{subfigure}[b]{0.22\textwidth} % Smaller width for each subfigure
            \centering
            \includegraphics[width=\textwidth]{figures1/Sudoku_constraint_1}
            \caption{Row constraint}
            \label{fig:sudokuRow}
          \end{subfigure}
          \hfill
          \begin{subfigure}[b]{0.22\textwidth} % Smaller width for each subfigure
            \centering
            \includegraphics[width=\textwidth]{figures1/Sudoku_constraint_2}
            \caption{Column constraint}
            \label{fig:sudokuColumn}
          \end{subfigure}
          \hfill
          \begin{subfigure}[b]{0.22\textwidth} % Smaller width for each subfigure
            \centering
            \includegraphics[width=\textwidth]{figures1/Sudoku_constraint_3}
            \caption{Block constraint}
            \label{fig:sudokuBlock}
          \end{subfigure}
          \hfill
          \begin{subfigure}[b]{0.22\textwidth} % Smaller width for each subfigure
            \centering
            \includegraphics[width=\textwidth]{figures1/Sudoku_constraint_4}
            \caption{Solution}
            \label{fig:sudokuSolution}
          \end{subfigure}
        \end{minipage}
      }
      \caption{Examples of Sudoku constraints: rows, columns, blocks, and the solution.}
      \label{fig:sudokuConstraints}
    \end{figure}
\end{frame}





\begin{frame}{Random Phase Retrieval Problem}
  \textbf{Magnitude Constraint:} Project \( y \) onto the set \( \mathcal{B} = \{ y \in \mathbb{C}^m : |y| = b \} \) using:
  \[
      P_{\mathcal{B}}(y) = b \odot \text{phase}(y),
  \]
  where \( \odot \) is the point-wise product and \( \text{phase}(y)[i] = \frac{y[i]}{|y[i]|} \).

  \textbf{Signal Constraint:} Projection onto the column space of \( A \):
  \[
      P_{\mathcal{A}}(y) = A A^\dagger y,
  \]
  where \( A^\dagger \) is the pseudo-inverse.
\end{frame}
\begin{frame}{Crystallographic Phase Retrieval Problem}

  \textbf{Magnitude Constraint:} Same as in the random phase retrieval problem:
  \[
      P_{\mathcal{B}}(y) = b \odot \text{phase}(y),
  \]
  where \( b \) is the magnitude constraint and \( \text{phase}(y)[i] = \frac{y[i]}{|y[i]|} \).

  \textbf{Sparsity Constraint:} Projection \( P_S \) retains the largest \( |S| \) elements:
  \[
      P_S(x)[i] =
      \begin{cases}
          x[i], & \text{if } i \text{ corresponds to one of the } |S| \text{ largest } |x|, \\
          0, & \text{otherwise}.
      \end{cases}
  \]
\end{frame}
\begin{frame}{Matrix Completion Problem}
  \textbf{Known Entries Constraint:} Maintain fixed entries:
  \[
      P_{\Omega}(X, M)[i,j] = \begin{cases}
          M[i,j], & (i,j) \in \Omega, \\
          X[i,j], & (i,j) \notin \Omega.
      \end{cases}
  \]

  \textbf{Rank Constraint:} Enforce rank-\( r \) using SVD:
  \[
      P_r(M) = U \Sigma_r V^*,
  \]
  where \( \Sigma_r \) retains the largest \( r \) singular values.
\end{frame}


% \begin{frame}{Set Projection Example Illustrated with Sudoku}
%     \textbf{Overview:}
%     \begin{itemize}
%         \item The projections method is effective for solving Sudoku, offering an intuitive visualization.
%         \item The problem space: all possible arrangements of numbers 1-9 in a Sudoku grid.
%         \item Goal: Adhere to all Sudoku rules to find the solution.
%     \end{itemize}
% \end{frame}

% \begin{frame}{Sudoku Constraints}
%     \textbf{Rules as Constraints:}
%     \begin{enumerate}
%         \item \textbf{Initial Clues:} Respect the numbers provided at the start of the game.
%         \item \textbf{Sudoku Rules:}
%         \begin{itemize}
%             \item Each row must contain the numbers 1-9 exactly once.
%             \item Each column must contain the numbers 1-9 exactly once.
%             \item Each $3\times3$ block must contain the numbers 1-9 exactly once.
%         \end{itemize}
%     \end{enumerate}
%     \textbf{Goal:} Find the intersection of all constraints.
% \end{frame}

% \begin{frame}{Projection Method for Sudoku}
%     \textbf{Methodology:}
%     \begin{itemize}
%         \item Define the problem as spaces and subspaces.
%         \item Start with a random vector in the problem space.
%         \item Iteratively project onto subspaces defined by each constraint.
%         \item Challenges:
%         \begin{itemize}
%             \item Satisfying one constraint may violate another.
%             \item Naive iterative projection may not converge efficiently.
%         \end{itemize}
%     \end{itemize}
%     \textbf{Future Focus:} Explore advanced projection methods for better efficiency.
% \end{frame}





% Add Projections and Algorithms Section
\section{Projection-based algorithms}


\begin{frame}{Reflections and Relaxation}
  \textbf{Reflection:}
  For a set \( \mathcal{S} \), the reflection across \( \mathcal{S} \) is defined as:
  \begin{equation}
    \operatorname{Ref}_{\mathcal{S}}(y) = 2P_{\mathcal{S}}(y) - y.
  \end{equation}

  \textbf{Relaxation:}
  Relaxation introduces flexibility by adjusting the influence of projections:
  \begin{equation}
    y^{(k+1)} = y^{(k)} + \beta \big(P_{\mathcal{S}}(y^{(k)}) - y^{(k)}\big).
  \end{equation}

  \textbf{Key Parameter:} \( \beta \), which controls the step size or influence.

  \begin{figure}[h!]
    \centering
    \includegraphics[width=0.2\textwidth]{figures1/reflection_plot.png}
    \caption{Illustration of the reflection operation across a set \( \mathcal{S}\)(the line).}
  \end{figure}
\end{frame}


\begin{frame}{Alternating Projections (AP)}
  \textbf{Algorithm:}
  \begin{equation}
    y^{(k+1)} = P_{\mathcal{A}} \left( P_{\mathcal{B}} \left( y^{(k)} \right) \right),
  \end{equation}
  where \( y^{(k)} \) is the vector at the \( k \)-th iteration, \( P_{\mathcal{A}}(y) \) and \( P_{\mathcal{B}}(y) \) are the projection operators onto sets \(\mathcal{A} \) and \( \mathcal{B} \), respectively.

  \textbf{Description:}
  \begin{itemize}
    \item Alternates projections onto sets \(\mathcal{A}\) and \(\mathcal{B}\).
    \item Iteratively approaches a solution that satisfies all constraints.
  \end{itemize}

  \textbf{Limitations:}
  \begin{itemize}
    \item May stagnate if the process becomes stuck at a specific value.
    \item Stagnation results in all subsequent iterations producing the same result.
  \end{itemize}

\end{frame}

% \begin{frame}{Example: Circle Intersection in Alternating Projections}
%   \small
%   \textbf{Objective:} Demonstrate the iterative process of Alternating Projections to find the intersection of 3 circles.
% \end{frame}

\begin{frame}{Example: Circle Intersection in Alternating Projections}
    \centering
    \includegraphics[width=0.4\textwidth]{figures1/proj_circle_1}
    % \vspace{0.5cm}

    \small
    \textbf{Description:} Start from a random point.
\end{frame}

\begin{frame}{Example: Circle Intersection in Alternating Projections}
    \centering
    \includegraphics[width=0.4\textwidth]{figures1/proj_circle_2}
    % \vspace{0.5cm}

    \small
    \textbf{Description:} Projection on the first circle.
\end{frame}

\begin{frame}{Example: Circle Intersection in Alternating Projections}
    \centering
    \includegraphics[width=0.4\textwidth]{figures1/proj_circle_3}
    % \vspace{0.5cm}

    \small
    \textbf{Description:} Projection on the second circle.
\end{frame}

\begin{frame}{Example: Circle Intersection in Alternating Projections}
    \centering
    \includegraphics[width=0.4\textwidth]{figures1/proj_circle_4}
    % \vspace{0.5cm}

    \small
    \textbf{Description:} Projection on the third circle.
\end{frame}

\begin{frame}{Example: Circle Intersection in Alternating Projections}
    \centering
    \includegraphics[width=0.4\textwidth]{figures1/proj_circle_5}
    % \vspace{0.5cm}

    \small
    \textbf{Description:} First step of the algorithm.
\end{frame}

\begin{frame}{Example: Circle Intersection in Alternating Projections}
    \centering
    \includegraphics[width=0.4\textwidth]{figures1/proj_circle_6}
    % \vspace{0.5cm}

    \small
    \textbf{Description:} Convergence to the intersection point.
\end{frame}

\begin{frame}{Relaxed Reflect Reflect (RRR)}
  \textbf{Algorithm:}
  \begin{equation}
    y^{(k+1)} = y^{(k)} + \gamma\big(P_{\mathcal{A}}(2P_{\mathcal{B}}(y^{(k)}) - y^{(k)}) - P_{\mathcal{B}}(y^{(k)})\big).
  \end{equation}
  \textbf{Advantages:}
  \begin{itemize}
    \item Oscillatory behavior avoids stagnation.
    \item Converges robustly in complex cases.
  \end{itemize}
\end{frame}

\begin{frame}{Relaxed Averaged Alternating Reflections (RAAR)}
  \textbf{Algorithm:}
  \begin{equation}
    y^{(k+1)} = \beta\big(y^{(k)} + P_{\mathcal{A}}(2P_{\mathcal{B}}(y^{(k)}) - y^{(k)})\big) + (1 - 2\beta)P_{\mathcal{B}}(y^{(k)}).
  \end{equation}
\end{frame}

\begin{frame}{Hybrid Input-Output (HIO)}
  \textbf{Algorithm:}
  \begin{equation}
    y^{(k+1)} = y^{(k)} + P_{\mathcal{A}}\big((1+\alpha)P_{\mathcal{B}}(y^{(k)}) - y^{(k)}\big) - \alpha P_{\mathcal{B}}(y^{(k)}).
  \end{equation}
  \textbf{Applications:}
  \begin{itemize}
    \item Widely used in phase retrieval problems.
  \end{itemize}
\end{frame}

\begin{frame}{Stopping Criteria}
  \textbf{Condition for Convergence:}
  \begin{equation}
    \|P_{\mathcal{A}}(y^{(k)}) - P_{\mathcal{B}}(y^{(k)})\| \leq \varepsilon,
  \end{equation}
  where \( \varepsilon \) is the tolerance threshold.

    \textbf{In the crystallographic problem:} the threshold is defined by:
    \begin{equation}
    \mu \coloneqq \frac{\text{I}_\text{S}}{\text{I}_\text{F}}, \quad \mu > 0.95,
    \label{eq:threshold_condition}
    \end{equation}
    where \( I_S \) and \( I_F \) represent the power of the support region and the full image, respectively.

  \begin{itemize}
    \item \textbf{Practical Notes:} Smaller \( \varepsilon \) and larger \( \mu \) ensure higher accuracy but may require more iterations.
    \item \textbf{Maximum Iterations:} In all experiments, a maximum number of iterations was defined. If the stopping criterion was not met within this limit, the solution was classified as "did not converge."
  \end{itemize}
\end{frame}



\section{Theoretical Boundaries in Matrix Completion}
\begin{frame}{Motivation: The Netflix Prize Model}
    \begin{itemize}
        \item \textbf{User-Movie Matrix:} Rows represent users, columns represent movies, and cells contain user ratings (percentage values).
        \item \textbf{Challenge:} Predict missing ratings accurately while minimizing user input.
        \item \textbf{Key Insight:} The matrix rank \(r\) captures patterns in user preferences and movie characteristics.
    \end{itemize}
    \begin{figure}[h]
        \centering
        \begin{tabular}{|l|c|c|c|c|c|}
        \hline
         & \textbf{The Lion King} & \textbf{Avatar} & \textbf{Inception} & \textbf{Titanic} & \textbf{The Avengers} \\
        \hline
        \textbf{John} & 99\% & 85\% & 80\% & - & 75\% \\
        \hline
        \textbf{Emily} & - & 10\% & - & 5\% & 77\% \\
        \hline
        \textbf{Michael} & 99\% & 87\% & 12\% & 90\% & 80\% \\
        \hline
        \textbf{Sarah} & 91\% & - & 1\% & 97\% & - \\
        \hline
        \end{tabular}
        \caption{Netflix Prize Model: Predicting missing elements in a user-movie matrix.}
        \label{table:Netflix_table}
    \end{figure}
\end{frame}

\begin{frame}{Theoretical Boundaries: Maximum Deletable Elements}

    \textbf{Claim:} For an \( n \times n \) matrix of rank \( r \), it is possible to delete up to:
    \[
    q = n^2 - (2nr - r^2) = (n-r)^2
    \]
    elements while ensuring \textbf{unique} reconstruction, assuming the matrix rank is known.

\end{frame}

\begin{frame}{Example: Best-Case Reconstruction Scenario}
    \textbf{Example Matrix:}
    \[
    A =
    \begin{bmatrix}
    1 & 1 & 1 & 6 & 3 \\
    1 & 2 & 3 & 12 & 6 \\
    1 & 3 & 4 & 16 & 8 \\
    9 & 18 & 24 & ? & x \\
    3 & 6 & 8 & ? & ? \\
    \end{bmatrix}.
    \]
    \begin{itemize}
        \item \( n = 5 \), \( r = 3 \).
        \item \((n-r)^2 = 4\) deletable elements.
        \item \( x \): Can be reconstructed by linear combinations of the first 3 columns.
        \item Ensures unique reconstruction under rank and deletable elements constraints.
    \end{itemize}
\end{frame}

\section{Numerical Experiments}








\section{Conclusion}
\begin{frame}{Conclusion}
    \textbf{Key Insights:}
    \begin{itemize}
        \item \textbf{Random Matrices:}
        \begin{itemize}
            \item AP and RAAR showed moderate success under standard conditions.
            \item RRR and HIO outperformed, with RRR requiring fewer iterations and exhibiting superior robustness.
        \end{itemize}
        \item \textbf{Crystallographic Phase Retrieval:}
        \begin{itemize}
            \item Noise sensitivity was analyzed using the RRR algorithm, showing decreased convergence rates as noise increased.
            \item The RRR algorithm demonstrated resilience to noise, converging reliably in low-noise scenarios.
        \end{itemize}
        \item \textbf{Matrix Completion:}
        \begin{itemize}
            \item RRR emerged as the most reliable in handling high levels of missing data.
            \item AP and RAAR often converged faster but were less consistent.
        \end{itemize}
    \end{itemize}

    \textbf{Implications:}
    These findings offer a foundation for advancing phase retrieval and matrix completion methodologies, benefiting fields reliant on signal recovery.
\end{frame}

\begin{frame}{Future Directions}
    \textbf{Potential Research Areas:}
    \begin{itemize}
        \item Development of hybrid algorithms to balance efficiency and robustness.
        \item Exploring scalability to larger, more complex problems.
        \item Improving resilience to noise in real-world scenarios.
    \end{itemize}

    \textbf{Goal:}
    To optimize algorithmic performance across diverse use cases by addressing both theoretical and practical challenges.
\end{frame}



\section{Bibliography}

{
%\singlespacing
\bibliographystyle{unsrt}
\bibliography{references}
}

\end{document}
